import * as React from 'react';

const Icon = (path: string, title = '') => ({ children, ...props }: any) => (
  <img src={path} title={title} {...props} />
);

export const ArrowLeft = Icon('/img/arrow-left.svg');

export const CheckIcon = (props: any) => (
  <svg width="24" height="24" viewBox="0 0 24 24">
    <defs>
      <path
        id="check-path"
        d="M17.7 1.7l-11 11c-.2.2-.4.3-.7.3-.3 0-.5-.1-.7-.3l-5-5c-.4-.4-.4-1 0-1.4.4-.4 1-.4 1.4 0L6 10.6 16.3.3c.4-.4 1-.4 1.4 0 .4.4.4 1 0 1.4z"
      />
    </defs>
    <g fill="none" fillRule="evenodd" transform="translate(3 6)">
      <mask id="check-mask" fill="#fff">
        <use xlinkHref="#check-path" />
      </mask>
      <g fill="#4A4A4A" mask="url(#check-mask)">
        <path d="M-3-6h24v24H-3z" />
      </g>
    </g>
  </svg>
);

export const ChevronRight = (props: any) => (
  <svg width="24" height="24" viewBox="0 0 24 24">
    <defs>
      <path
        id="a"
        d="M15.7 12.7l-6 6c-.2.2-.4.3-.7.3-.3 0-.5-.1-.7-.3-.4-.4-.4-1 0-1.4l5.3-5.3-5.3-5.3c-.4-.4-.4-1 0-1.4.4-.4 1-.4 1.4 0l6 6c.4.4.4 1 0 1.4z"
      />
    </defs>
    <g fill="none" fillRule="evenodd">
      <mask id="b" fill="#fff">
        <use xlinkHref="#a" />
      </mask>
      <g fill="#4A4A4A" mask="url(#b)">
        <path d="M0 0h24v24H0z" />
      </g>
    </g>
  </svg>
);

export const CloseIcon = ({ black, ...props }: any) => {
  const RealIcon = Icon(`/img/close${black ? '-black' : ''}.svg`);
  return <RealIcon {...props} />;
};

export const ContactIcon = Icon('/img/contact.svg');

export const CrossIcon = (props: any) => (
  <svg width="24" height="24" viewBox="0 0 24 24">
    <defs>
      <path
        id="cross-path"
        d="M13.7 12.3c.4.4.4 1 0 1.4-.2.2-.4.3-.7.3-.3 0-.5-.1-.7-.3L7 8.4l-5.3 5.3c-.2.2-.4.3-.7.3-.3 0-.5-.1-.7-.3-.4-.4-.4-1 0-1.4L5.6 7 .3 1.7C-.1 1.3-.1.7.3.3c.4-.4 1-.4 1.4 0L7 5.6 12.3.3c.4-.4 1-.4 1.4 0 .4.4.4 1 0 1.4L8.4 7l5.3 5.3z"
      />
    </defs>
    <g fill="none" fillRule="evenodd" transform="translate(5 5)">
      <mask id="cross-mask" fill="#fff">
        <use xlinkHref="#cross-path" />
      </mask>
      <g fill="#4A4A4A" mask="url(#cross-mask)">
        <path d="M-5-5h24v24H-5z" />
      </g>
    </g>
  </svg>
);

export const DiscourseIcon = Icon('/img/discourse.svg');

export const DownloadIcon = (props: any) => (
  <svg width="15px" height="16px" viewBox="0 0 15 16">
    <g stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
      <g fill="#000000">
        <path d="M0.99609375,4.11035156 C1.66992524,2.95800205 2.58300205,2.04736663 3.73535156,1.37841797 C4.88770107,0.709469312 6.14257134,0.375 7.5,0.375 C8.85742866,0.375 10.1122989,0.709469312 11.2646484,1.37841797 C12.4169979,2.04736663 13.3276334,2.95800205 13.996582,4.11035156 C14.6655307,5.26270107 15,6.51757134 15,7.875 C15,9.23242866 14.6655307,10.4872989 13.996582,11.6396484 C13.3276334,12.7919979 12.4169979,13.7026334 11.2646484,14.371582 C10.1122989,15.0405307 8.85742866,15.375 7.5,15.375 C6.14257134,15.375 4.88770107,15.0405307 3.73535156,14.371582 C2.58300205,13.7026334 1.67236663,12.7919979 1.00341797,11.6396484 C0.334469312,10.4872989 0,9.23242866 0,7.875 C0,6.51757134 0.33202793,5.26270107 0.99609375,4.11035156 Z M13.5498047,5.32617188 C13.2080061,4.51562095 12.7417022,3.81738574 12.1508789,3.23144531 C11.5600556,2.64550488 10.8593791,2.17920095 10.0488281,1.83251953 C9.2382772,1.48583811 8.38867632,1.3125 7.5,1.3125 C6.61132368,1.3125 5.7617228,1.48583811 4.95117188,1.83251953 C4.14062095,2.17920095 3.44238574,2.64550488 2.85644531,3.23144531 C2.27050488,3.81738574 1.80420095,4.51562095 1.45751953,5.32617188 C1.11083811,6.1367228 0.9375,6.98632368 0.9375,7.875 C0.9375,8.76367632 1.11083811,9.6132772 1.45751953,10.4238281 C1.80420095,11.2343791 2.27050488,11.9326143 2.85644531,12.5185547 C3.44238574,13.1044951 4.14062095,13.570799 4.95117188,13.9174805 C5.7617228,14.2641619 6.61132368,14.4375 7.5,14.4375 C8.38867632,14.4375 9.2382772,14.2641619 10.0488281,13.9174805 C10.8593791,13.570799 11.5600556,13.1044951 12.1508789,12.5185547 C12.7417022,11.9326143 13.2104475,11.2343791 13.5571289,10.4238281 C13.9038103,9.6132772 14.0771484,8.76367632 14.0771484,7.875 C14.0771484,6.98632368 13.9013689,6.1367228 13.5498047,5.32617188 Z M7.03125,4.59375 C7.03125,4.52539028 7.04345691,4.46191436 7.06787109,4.40332031 C7.09228528,4.34472627 7.12402324,4.29589863 7.16308594,4.25683594 C7.20214863,4.21777324 7.25097627,4.18603528 7.30957031,4.16162109 C7.36816436,4.13720691 7.43164028,4.125 7.5,4.125 C7.62695376,4.125 7.73681594,4.16894487 7.82958984,4.25683594 C7.92236375,4.344727 7.96875,4.45703057 7.96875,4.59375 L7.96875,9.89648438 L9.68261719,8.16796875 C9.78027393,8.08007769 9.89257749,8.03613281 10.0195312,8.03613281 C10.146485,8.03613281 10.2563472,8.08251907 10.3491211,8.17529297 C10.441895,8.26806687 10.4882812,8.37792905 10.4882812,8.50488281 C10.4882812,8.63183657 10.4443364,8.74414014 10.3564453,8.84179688 L7.51464844,11.6103516 L4.67285156,8.84179688 C4.64355454,8.81249985 4.61914072,8.77832051 4.59960937,8.73925781 C4.47265562,8.53417866 4.49706943,8.34375088 4.67285156,8.16796875 C4.70214858,8.13867173 4.73388655,8.11425791 4.76806641,8.09472656 C4.80224626,8.07519521 4.83886699,8.06054692 4.87792969,8.05078125 C4.91699238,8.04101558 4.95605449,8.03613281 4.99511719,8.03613281 C5.03417988,8.03613281 5.07324199,8.04101558 5.11230469,8.05078125 C5.15136738,8.06054692 5.19042949,8.07519521 5.22949219,8.09472656 C5.26855488,8.11425791 5.30273423,8.13867173 5.33203125,8.16796875 L7.03125,9.8671875 L7.03125,4.59375 Z" />
      </g>
    </g>
  </svg>
);

export const GithubIcon = Icon('/img/github.svg');

export const KeyboardIcon = Icon('/img/keyboard.svg');

export const MenuIcon = ({ className = '', ...props }: any) => (
  <svg className={'menu-icon ' + className} width="10" height="10" {...props}>
    <rect className="left" x="4" y="0" width="2" height="2" />
    <rect className="right" x="4" y="0" width="2" height="2" />
    <rect x="4" y="4" width="2" height="2" />
    <rect className="left" x="4" y="8" width="2" height="2" />
    <rect className="right" x="4" y="8" width="2" height="2" />
  </svg>
);

let micId = 0;
export const MicIcon = (props: any) => {
  const id = micId++;
  return (
    <svg width="29" height="28" viewBox="0 0 29 28">
      <defs>
        <path
          id={'mic-path' + id}
          d="M9.333 18.667A4.68 4.68 0 0 0 14 14V4.667A4.68 4.68 0 0 0 9.333 0a4.68 4.68 0 0 0-4.666 4.667V14a4.68 4.68 0 0 0 4.666 4.667zM7 4.667a2.34 2.34 0 0 1 2.333-2.334 2.34 2.34 0 0 1 2.334 2.334V14a2.34 2.34 0 0 1-2.334 2.333A2.34 2.34 0 0 1 7 14V4.667zm11.667 7V14c0 4.783-3.617 8.633-8.167 9.217v2.45H14c.7 0 1.167.466 1.167 1.166S14.7 28 14 28H4.667c-.7 0-1.167-.467-1.167-1.167s.467-1.166 1.167-1.166h3.5v-2.45C3.617 22.633 0 18.667 0 14v-2.333c0-.7.467-1.167 1.167-1.167s1.166.467 1.166 1.167V14c0 3.85 3.15 7 7 7s7-3.15 7-7v-2.333c0-.7.467-1.167 1.167-1.167s1.167.467 1.167 1.167z"
        />
      </defs>
      <g fill="none" fillRule="evenodd" transform="translate(5)">
        <mask id={'mic-mask' + id} fill="#fff">
          <use xlinkHref={'#mic-path' + id} />
        </mask>
        <g fill="#FF4F5E" mask={`url(#mic-mask${id})`}>
          <path d="M-5 0h28v28H-5z" />
        </g>
      </g>
    </svg>
  );
};

export const OldPlayIcon = (props: any) => (
  <svg viewBox="0 0 13 15" {...props}>
    <g stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
      <g id="icon-/-play" fill="#B7D43F">
        <path
          d="M0.978009259,0 C1.03819475,0 1.09587164,0.00733847847 1.15104167,0.0220156556 C1.2062117,0.0366928327 1.2613809,0.0538159491 1.31655093,0.0733855186 C1.37172095,0.0929550881 1.42438247,0.117416683 1.47453704,0.146771037 L12.5486111,6.7074364 C12.6388893,6.75636032 12.7191355,6.82240663 12.7893519,6.9055773 C12.8595683,6.98874797 12.9122298,7.08170203 12.947338,7.18444227 C12.9824462,7.28718251 13,7.39236737 13,7.5 C13,7.85225225 12.8495385,8.11643748 12.5486111,8.2925636 L1.45949074,14.853229 C1.38927434,14.9021529 1.31153592,14.9388453 1.22627315,14.9633072 C1.14101038,14.9877692 1.05324119,15 0.962962963,15 C0.882715648,15 0.802469537,14.9902154 0.722222222,14.9706458 C0.641974907,14.9510762 0.566744178,14.9217223 0.496527778,14.8825832 C0.165507604,14.6966723 0,14.4227024 0,14.0606654 L0.0150462963,0.939334638 C0.0150462963,0.577297603 0.1805539,0.30332774 0.511574074,0.11741683 C0.652006875,0.0391385519 0.807483715,0 0.978009259,0 Z"
          id="play-button"
        />
      </g>
    </g>
  </svg>
);

export const OldRedoIcon = (props: any) => (
  <svg>
    <g strokeWidth="1" fill="none" fillRule="evenodd">
      <g fill="#000000">
        <path d="M28.5714626,3.19044781 C28.5714626,2.70681628 28.2738432,2.27898839 27.8460153,2.09297626 C27.3995862,1.90696413 26.8787523,1.9999702 26.5439305,2.35339324 L24.1257728,4.75294967 C21.5030018,2.27898839 17.9501702,0.809492588 14.2857313,0.809492588 C6.41741836,0.809492588 0,7.22691095 0,15.0952239 C0,22.9635369 6.41741836,29.3809552 14.2857313,29.3809552 C18.545409,29.3809552 22.5632709,27.5022327 25.279048,24.2284193 C25.4650601,23.9866036 25.4650601,23.6331805 25.2418456,23.4285672 L22.6934794,20.8615998 C22.5632709,20.7499925 22.39586,20.6941889 22.2284491,20.6941889 C22.0610382,20.7127901 21.8936273,20.787195 21.8006212,20.9174035 C19.9777024,23.2797575 17.2433241,24.6190448 14.2857313,24.6190448 C9.04018935,24.6190448 4.76191044,20.3407659 4.76191044,15.0952239 C4.76191044,9.84968194 9.04018935,5.57140303 14.2857313,5.57140303 C16.7224902,5.57140303 19.0290405,6.50146366 20.7775545,8.11976916 L18.2105872,10.6867365 C17.8571641,11.0215583 17.7641581,11.5423923 17.9501702,11.9702202 C18.1361823,12.4166493 18.5640102,12.7142687 19.0476418,12.7142687 L27.380985,12.7142687 C28.0320275,12.7142687 28.5714626,12.1748335 28.5714626,11.5237911 L28.5714626,3.19044781 Z" />
      </g>
    </g>
  </svg>
);

let playOutlineId = 0;
export const PlayOutlineIcon = (props: any) => {
  const id = playOutlineId++;
  return (
    <svg width="24" height="24" viewBox="0 0 24 24">
      <defs>
        <path
          id={'play-outline-path' + id}
          d="M15.5 9.173L1.5.15c-.3-.2-.7-.2-1 0-.3.1-.5.401-.5.802v18.045c0 .401.2.702.5.903.2.1.3.1.5.1s.4-.1.5-.2l14-9.023c.3-.2.5-.501.5-.802 0-.3-.2-.702-.5-.802zM2 17.193V2.757l11.2 7.218L2 17.193z"
        />
      </defs>
      <g fill="none" fillRule="evenodd" transform="translate(4 2)">
        <mask id={'play-outline-mask' + id} fill="#fff">
          <use xlinkHref={'#play-outline-path' + id} />
        </mask>
        <g fill="#4A4A4A" mask={`url(#play-outline-mask${id})`}>
          <path d="M-4-1h24v24H-4z" />
        </g>
      </g>
    </svg>
  );
};

export const PlayIcon = Icon('/img/play.svg', 'play');

let redoId = 0;
export const RedoIcon = (props: any) => {
  const id = redoId++;
  return (
    <svg width="24" height="24" viewBox="0 0 24 24">
      <defs>
        <path
          id={'redo-path' + id}
          d="M15.171 19.399c-1.105.4-2.21.601-3.315.601-4.12 0-8.038-2.604-9.445-6.711-.2-.501.1-1.102.603-1.302.502-.2 1.105.1 1.306.6 1.507 4.208 6.029 6.411 10.248 4.909 4.22-1.503 6.43-6.01 4.923-10.217-.703-2.003-2.21-3.606-4.119-4.608-1.909-.901-4.12-1.001-6.129-.3-1.105.4-2.21 1.001-3.014 1.903L3.316 6.978h3.516c.603 0 1.005.401 1.005 1.002s-.402 1.002-1.005 1.002H.603h-.1l-.101-.1c-.1 0-.1-.1-.201-.1 0 0 0-.1-.1-.1C.1 8.58 0 8.58 0 8.48v-.2-6.31C0 1.368.402.967 1.005.967c.603 0 1.004.401 1.004 1.002v3.706l3.015-2.804C6.028 1.87 7.334 1.069 8.74.568c2.512-.902 5.224-.701 7.636.4 2.411 1.202 4.22 3.206 5.124 5.71 1.708 5.209-1.105 10.918-6.33 12.721z"
        />
      </defs>
      <g fill="none" fillRule="evenodd" transform="translate(1 2)">
        <mask id={'redo-mask' + id} fill="#fff">
          <use xlinkHref={'#redo-path' + id} />
        </mask>
        <g fill="#4A4A4A" mask={`url(#redo-mask${id})`}>
          <path d="M-1-2h24v24H-1z" />
        </g>
      </g>
    </svg>
  );
};

export const RecordIcon = Icon('/img/record.svg', 'record');

export const SearchIcon = Icon('/img/search.svg', 'search');

let shareId = 0;
export const ShareIcon = (props: any) => {
  const id = shareId++;
  return (
    <svg width="24" height="24" viewBox="0 0 24 24">
      <defs>
        <path
          id={'share-path' + id}
          d="M18 10.987v8.01C18 20.699 16.7 22 15 22H3c-1.7 0-3-1.301-3-3.003v-8.01c0-.6.4-1 1-1s1 .4 1 1v8.01c0 .6.4 1 1 1h12c.6 0 1-.4 1-1v-8.01c0-.6.4-1 1-1s1 .4 1 1zM5.7 5.681L8 3.38V13.99c0 .6.4 1.001 1 1.001s1-.4 1-1.001V3.379l2.3 2.302c.2.2.4.3.7.3.3 0 .5-.1.7-.3.4-.4.4-1 0-1.401L9.7.275c-.1-.1-.2-.2-.3-.2-.2-.1-.5-.1-.8 0-.1.1-.2.1-.3.2l-4 4.005c-.4.4-.4 1.001 0 1.401.4.4 1 .4 1.4 0z"
        />
      </defs>
      <g fill="none" fillRule="evenodd" transform="translate(3 1)">
        <mask id={'share-mask' + id} fill="#fff">
          <use xlinkHref={'#share-path' + id} />
        </mask>
        <g fill="#4A4A4A" mask={`url(#share-mask${id})`}>
          <path d="M-3-1h24v24H-3z" />
        </g>
      </g>
    </svg>
  );
};

let skipId = 0;
export const SkipIcon = (props: any) => {
  const id = skipId++;
  return (
    <svg width="22" height="22" viewBox="0 0 22 22">
      <defs>
        <path
          id={'skip-path' + id}
          d="M12.558 6.142l-4.583 4.583a.832.832 0 0 1-.642.275.832.832 0 0 1-.641-.275.886.886 0 0 1 0-1.283L10.633 5.5 6.692 1.558a.886.886 0 0 1 0-1.283.886.886 0 0 1 1.283 0l4.583 4.583a.886.886 0 0 1 0 1.284zM6.142 4.858L1.558.275a.886.886 0 0 0-1.283 0 .886.886 0 0 0 0 1.283L4.217 5.5.275 9.442a.886.886 0 0 0 0 1.283.832.832 0 0 0 .642.275.832.832 0 0 0 .641-.275l4.584-4.583a.886.886 0 0 0 0-1.284z"
        />
      </defs>
      <g fill="none" fillRule="evenodd" transform="translate(4.583 5.5)">
        <mask id={'skip-mask' + id} fill="#fff">
          <use xlinkHref={'#skip-path' + id} />
        </mask>
        <use fill="#000" fillRule="nonzero" xlinkHref={'#skip-path' + id} />
        <g fill="#000" mask={`url(#skip-mask${id})`}>
          <path d="M-4.583-5.5h22v22h-22z" />
        </g>
      </g>
    </svg>
  );
};

let stopId = 0;
export const StopIcon = (props: any) => {
  const id = stopId++;
  return (
    <svg width="28" height="28" viewBox="0 0 28 28">
      <defs>
        <path
          id={'stop-path' + id}
          d="M19.833 0H3.5C1.517 0 0 1.517 0 3.5v16.333c0 1.984 1.517 3.5 3.5 3.5h16.333c1.984 0 3.5-1.516 3.5-3.5V3.5c0-1.983-1.516-3.5-3.5-3.5zM21 19.833c0 .7-.467 1.167-1.167 1.167H3.5c-.7 0-1.167-.467-1.167-1.167V3.5c0-.7.467-1.167 1.167-1.167h16.333c.7 0 1.167.467 1.167 1.167v16.333z"
        />
      </defs>
      <g fill="none" fillRule="evenodd" transform="translate(2.333 2.333)">
        <mask id={'stop-mask' + id} fill="#fff">
          <use xlinkHref={'#stop-path' + id} />
        </mask>
        <g fill="#FF4F5E" mask={`url(#stop-mask${id})`}>
          <path d="M-2.333-2.333h28v28h-28z" />
        </g>
      </g>
    </svg>
  );
};

export const SuccessIcon = Icon('/img/success.svg', 'success');

export const SupportIcon = Icon('/img/support.svg', 'support');

export const ThumbsDownIcon = (props: any) => (
  <svg width="24" height="24" viewBox="0 0 24 24">
    <defs>
      <path
        id="thumbs-down-path"
        d="M22 2.913C21.797 1.205 20.38 0 18.658 0H4.48C2.96 0 1.745 1.105 1.442 2.511L.024 11.553c-.203 1.607.911 3.214 2.532 3.415h5.266v3.014c0 2.21 1.823 4.018 4.05 4.018.406 0 .81-.2.912-.603l3.747-8.438h2.026c1.721 0 3.14-1.206 3.342-2.913V3.014c.101 0 .101-.1.101-.1zm-7.09 8.94l-3.645 8.138c-.81-.302-1.418-1.005-1.418-1.909v-4.018c0-.603-.405-1.005-1.012-1.005H3.062h-.203c-.506-.1-.911-.602-.81-1.105l1.418-9.04c.101-.503.506-.905 1.013-.905h10.43v9.845zm5.065-1.908c-.102.603-.71 1.105-1.317 1.105h-1.722V2.01h1.722c.608 0 1.215.501 1.317 1.104v6.831z"
      />
    </defs>
    <g fill="none" fillRule="evenodd" transform="translate(1 1)">
      <mask id="thumbs-down-mask" fill="#fff">
        <use xlinkHref="#thumbs-down-path" />
      </mask>
      <g fill="#4A4A4A" mask="url(#thumbs-down-mask)">
        <path d="M-1-1h24v24H-1z" />
      </g>
    </g>
  </svg>
);

export const ThumbsUpIcon = (props: any) => (
  <svg width="24" height="24" viewBox="0 0 24 24">
    <defs>
      <path
        id="thumbs-up-path"
        d="M21.367 8.2c-.506-.6-1.215-1.1-2.025-1.2h-5.165V4c0-2.2-1.823-4-4.05-4-.405 0-.81.2-.912.6L5.468 9h-2.43C1.316 9 0 10.3 0 12v7c0 1.7 1.316 3 3.038 3h14.481c1.519 0 2.734-1.1 3.038-2.5l1.418-9c.1-.8-.102-1.6-.608-2.3zM5.063 20H3.038c-.608 0-1.013-.4-1.013-1v-7c0-.6.405-1 1.013-1h2.025v9zm13.469-.8c-.102.5-.507.8-1.013.8H7.089v-9.8l3.645-8.1c.81.3 1.418 1 1.418 1.9v4c0 .6.405 1 1.013 1h5.974c.304 0 .507.2.71.4.202.2.202.5.202.7l-1.52 9.1z"
      />
    </defs>
    <g fill="none" fillRule="evenodd" transform="translate(1 1)">
      <mask id="thumbs-up" fill="#fff">
        <use xlinkHref="#thumbs-up-path" />
      </mask>
      <g fill="#4A4A4A" mask="url(#thumbs-up)">
        <path d="M-1-1h24v24H-1z" />
      </g>
    </g>
  </svg>
);

export const VolumeIcon = (props: any) => (
  <svg width="24" height="24" viewBox="0 0 24 24">
    <defs>
      <path
        id="volume-path"
        d="M10.388.108c-.3-.198-.799-.099-1.099.1L4.595 3.982H.999c-.6 0-.999.397-.999.993v5.96c0 .595.4.993.999.993h3.596l4.694 3.774c.2.1.4.199.6.199.1 0 .3 0 .4-.1.299-.198.599-.496.599-.894V1.002c.1-.397-.1-.695-.5-.894zM8.99 12.822L5.594 10.14c-.2-.1-.4-.199-.6-.199H1.998V5.968h2.996c.2 0 .4-.099.6-.198L8.99 3.088v9.734zm6.193-9.039c2.297 2.285 2.297 6.059 0 8.443-.2.198-.5.298-.7.298-.2 0-.499-.1-.699-.298a.956.956 0 0 1 0-1.39c1.599-1.59 1.599-4.073 0-5.662a.956.956 0 0 1 0-1.39c.4-.398 1.1-.398 1.399 0zm3.596 11.919c-.2.199-.5.298-.7.298-.2 0-.499-.1-.699-.298a.956.956 0 0 1 0-1.39c3.496-3.477 3.496-9.138 0-12.615a.956.956 0 0 1 0-1.39.97.97 0 0 1 1.399 0c4.295 4.172 4.295 11.124 0 15.395z"
      />
    </defs>
    <g fill="none" fillRule="evenodd" transform="translate(0 4)">
      <mask id="volume-mask" fill="#fff">
        <use xlinkHref="#volume-path" />
      </mask>
      <g fill="#4A4A4A" mask="url(#volume-mask)">
        <path d="M-1-4h24v24H-1z" />
      </g>
    </g>
  </svg>
);

const FONT_ICONS = {
  chrome: '',
  facebook: '',
  firefox: '',
  link: '',
  pause: '',
  stop: '',
  twitter: '',
  undo: '',
};

interface FontIconProps {
  [key: string]: any;
  type: keyof typeof FONT_ICONS;
}

export const FontIcon = ({ type, ...props }: FontIconProps) => (
  <span aria-hidden="true" data-icon={FONT_ICONS[type]} {...props} />
);
