---
name: build and push to GAR
on:
  push:
    tags:
      #- 'release-v*.*.*'
      #- 'stage-v*.*.*'
      - 'sandbox-v*.*.*'

jobs:
  build-and-push:
    name: build and push
    runs-on:
      - ubuntu-latest

    environment: build
    permissions:
      contents: read
      id-token: write

    strategy:
      matrix:
        include:
          - dockerfile: ./Docker/Dockerfile
            image: common-voice
          - dockerfile: ./bundler/Dockerfile
            image: bundler

    steps:
      - uses: actions/checkout@v4

      - id: set-tag
        run: |-
          echo TAG=$(git describe --tags --abbrev=4 2>/dev/null || git rev-parse --short=8 HEAD) | tee -a ${GITHUB_OUTPUT}

      - uses: docker/setup-buildx-action@v3

      - id: gcp-auth
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          service_account: artifact-writer@${{ secrets.GAR_PROJECT_ID }}.iam.gserviceaccount.com
          workload_identity_provider: projects/${{ secrets.WORKLOAD_IDENTITY_POOL_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github-actions/providers/github-actions

      - id: docker-login
        uses: docker/login-action@v3
        with:
          registry: us-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.gcp-auth.outputs.access_token }}

      - id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: src
          file: ${{ matrix.dockerfile }}
          tags: |
            us-docker.pkg.dev/${{ secrets.GAR_PROJECT_ID }}/common-voice-prod/${{ matrix.image }}:${{ steps.set-tag.outputs.TAG }}
            us-docker.pkg.dev/${{ secrets.GAR_PROJECT_ID }}/common-voice-prod/${{ matrix.image }}:latest

          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max