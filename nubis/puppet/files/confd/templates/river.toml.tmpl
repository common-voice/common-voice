# MySQL address, user and password
# user must have replication privilege in MySQL.
my_addr = "{{ if exists "/config/Database/Server" }}{{ getv "/config/Database/Server" }}{{ else }}localhost{{ end }}:3306"
my_user = "{{ if exists "/config/Database/User" }}{{ getv "/config/Database/User" }}{{ else }}voicecommons{{ end }}"
my_pass = "{{ if exists "/config/Database/Password" }}{{ getv "/config/Database/Password" }}{{ else }}voicecommons{{ end }}"
my_charset = "utf8"


# Set true when elasticsearch use https
#es_https = false
# Elasticsearch address
es_addr = "127.0.0.1:9200"
# Elasticsearch user and password, maybe set by shield, nginx, or x-pack
es_user = ""
es_pass = ""

# Path to store data, like master.info, if not set or empty,
# we must use this to support breakpoint resume syncing. 
# TODO: support other storage, like etcd. 
data_dir = "/tmp"

# Inner Http status address
stat_addr = "127.0.0.1:12801"

# pseudo server id like a slave 
server_id = 1001

# mysql or mariadb
flavor = "mysql"

# mysqldump execution path
# if not set or empty, ignore mysqldump.
mysqldump = "mysqldump"

# if we have no privilege to use mysqldump with --master-data,
# we must skip it.
skip_master_data = true

# minimal items to be inserted in one bulk
bulk_size = 128

# force flush the pending requests if we don't have enough items >= bulk_size
flush_bulk_time = "200ms"

# Ignore table without primary key
skip_no_pk_table = false

# MySQL data source
[[source]]
schema = "{{ if exists "/config/Database/Name" }}{{ getv "/config/Database/Name" }}{{ else }}voiceweb{{ end }}"

tables = [
 "awards",
 "clips",
 "custom_goals",
 "downloaders",
 "language_requests",
 "locales",
 "reported_clips",
 "reported_sentences",
 "requested_languages",
 "skipped_sentences",
 "user_client_accents",
 "user_client_activities",
 "votes",
 "user_clients",
]

[[rule]]
schema = "{{ if exists "/config/Database/Name" }}{{ getv "/config/Database/Name" }}{{ else }}voiceweb{{ end }}"
table = "user_clients"
filter = ["client_id", "email", "age", "gender"]
