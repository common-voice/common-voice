dist: trusty
sudo: enabled
language: node_js
node_js:
  - '10'
services:
  - mysql
  - docker
# Skip npm install
install: true
before_install:
  - mysql -e "SET PASSWORD FOR 'root'@'localhost' =  PASSWORD('');"
  - sudo add-apt-repository ppa:mc3man/trusty-media --yes
  - sudo apt-get update
  - sudo apt-get install ffmpeg gstreamer0.10-ffmpeg
before_script:
  - SAFE_BRANCH_NAME=$(echo -n $TRAVIS_BRANCH | perl -pe's/[^a-zA-Z0-9_.-]/_/g' )
  - REVISION_TAG="$SAFE_BRANCH_NAME-$TRAVIS_COMMIT"
  - if [ "$TRAVIS_TAG" == "" ]; then SYMBOLIC_TAG="$SAFE_BRANCH_NAME-latest"; else SYMBOLIC_TAG="$TRAVIS_TAG";
    fi
  - echo "Branch $SAFE_BRANCH_NAME"
  - echo "Tag $TRAVIS_TAG"
  - if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin; fi
  - if [ "$TRAVIS_TAG" == "" ]; then docker pull "$IMAGE_NAME:$SYMBOLIC_TAG" || true
    ; fi
after_script:
  - docker images
script:
  - docker build --build-arg=TAG=$TRAVIS_TAG --build-arg=REPO=$TRAVIS_REPO_SLUG --build-arg=COMMIT=$TRAVIS_COMMIT
    --build-arg=BRANCH=$TRAVIS_BRANCH --pull --cache-from "$IMAGE_NAME" --tag "$IMAGE_NAME"
    -f docker/Dockerfile .
  - yarn install --frozen-lockfile
  - yarn test
before_deploy:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker tag $IMAGE_NAME "$IMAGE_NAME:$REVISION_TAG"
  - docker tag $IMAGE_NAME "$IMAGE_NAME:$SYMBOLIC_TAG"
  - git diff
deploy:
  provider: script
  on:
    all_branches: true
    condition: ($TRAVIS_TAG != "" || $TRAVIS_BRANCH =~ ^(main|production|stage)$) && ! $TRAVIS_COMMIT_MESSAGE =~ ^Pontoon:*
  script: docker push "$IMAGE_NAME:$REVISION_TAG" && docker push "$IMAGE_NAME:$SYMBOLIC_TAG"
env:
  global:
    - IMAGE_NAME=itsre/voice-web
    - secure: UQGXi9wTiftApnfryK7fyMliNRZ+UzG93VlehYn3K5Aw7kZpJZEX5xJyz8sN0zMErxcaQC0LZ9CJF/fDCMb/LDW1dxsMin0Y8Sqr3nikpv0qMIE9rjzpwd2VEsfT9ya6ruLtW2fWfkH3FV+6+oVdWuwYr0C19E+AnQFImL/O48y5kmFMIAY4FC99cOL5PpiBA8uFj+5vniVC7vTcCg8/cvXNYYSLCwwc7Y4R8xDiXSUCtBDvnEn6fWX9oO6AdEoWLCMAwbmkk7qG/W5ijnS5depuRgoKzK6og98KVSxjRZv7xWkHx06Bn2Csvxd4m+W3WwV4YdL5SPec0k+H3bZ9+Fw+cljPjhFqwj1wMEqR2cCkFXtSzDloBPrDt4oQY5J6IZ00LmB+ul8c6rcM+j6F9c8lS36Pj08/OymZHLCowVJHMGgnG9X6CwykFHz0Po+kCcrbwfkOkcpRWG2JHPicpSUSOPCRPNM2dKa/QzjlCCI4DrBQrcGt6RS5DVMKm4PE9K7eIovP5CjSfHPx4n9BaDFdiwM0wpKgJAvafMyR6d4OPTguiwUyPJf4Bugx1kGkEjohvUnGf0m3zW3ZO2LTNf2zILOI1bcTsNWtJX+GLfUrczzYlA8UWDaPGWqncesoYH1SZ3QHf5fFvq+nhXKoZXNbrrJM8m/Quw9lidw0to0=
    - secure: wYs0Ay42nlfJSVSgYTztgcIRQc5gl0WxrJDKlxtpEb35zjFUmXcnNfCtSt0hSE2Oi/5R2F0dFedP6/asVgE16KPL6ozx75L3FWY1JMcrJz3jrB1odeij1qt0mpjCY4R7ojUt2TbtMEhI3XGOnwDocl0JxfE9MPHreJYN9DDkyfCMuOE2sUmMMpkFUcWwVYNXad/ZRUlTYAHd+drIUjzkw+6lB3Z39evoOZsHdi+CGwtcLk6XErzqGq+aT0h0ZLZFcJjHNvovsXvmNHUBXFmqbZDiLwEApqjvJ+533HAWDen5izzjvOBSRSU6sYixyAUBP2f/ZUq7RNeYgZFAmKwBQr0L9KQJ9fxyMoqFuRYW1m7p4noXCfD3vfTmhtzX+EydMwViJh7EmlDZdHAImcstsEGLrBo8fmGdwPZRpoyTk+LMBqfZfRQizS272cqQCdV+0zyOXUqquDlcr/XyrgI5+SXbPLt/jDvV2ttlsExr/brTbpdSi6Qrh2J7MfeFSMM7uoAftkYlG/YxOk7RF+zb7Gp2gDhCX5EKFAD32/MAp6dYT28TLvt2bct5LVVGhmwgCqG0K5+G7jfWkyMnBaNk/gIHDOr4iB5rLNdnu1KSVCg6lNIDpyPdIY+HygbG/RvR9hKP4MgI+BwQXbL6aa4h2dtJjiwDYIzuf3X1ZUsnoUM=
